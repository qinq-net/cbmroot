#$ -wd /tmp 
#$ -j y
# Number of subtasks to start
#$ -t 1-2000

#XXXXX=$(printf "%05d" "1")
#XXXX=$(printf "%04d" "1")
XXXXX=$(printf "%05d" "$SGE_TASK_ID")
XXXX=$(printf "%04d" "$SGE_TASK_ID")

# specify input and output directories
outdir=/hera/cbm/users/slebedev/data/lmvm/sep15/${coll_energy}/${setupDirName}/${pluto_particle}/
cbmroot_config_path=/hera/cbm/users/slebedev/trunk/build/config.sh
macro_dir=/hera/cbm/users/slebedev/trunk/cbmroot/macro/analysis/dielectron/

# Needed to run macro via script
export SCRIPT=yes

# Number of events to run
nevents=500

#create needed directories
mkdir -p ${outdir}/log

#create directory for output results
mkdir -p ${outdir}/results/${XXXXX}/

# setup the run environment
source ${cbmroot_config_path}
 
# This line is needed, otherwise root will crash
export DISPLAY=localhost:0.0


#Temporary set 4gev for 3.5gev since 3.5 is not available
if [ ${coll_energy} = "3.5gev" ] ; then
   export URQMD_FILE=/hera/cbm/prod/gen/urqmd_old/auau/4gev/centr/urqmd.auau.4gev.centr.${XXXXX}.root
else
  export URQMD_FILE=/hera/cbm/prod/gen/urqmd/auau/${coll_energy}/centr/urqmd.auau.${coll_energy}.centr.${XXXXX}.root
fi
#export URQMD_FILE=/hera/cbm/prod/gen/urqmd_old/auau/${coll_energy_new}/centr/urqmd.auau.${coll_energy_new}.centr.${XXXXX}.root

export MC_FILE=${outdir}/mc.auau.${coll_energy}.centr.${XXXXX}.root
export PAR_FILE=${outdir}/params.auau.${coll_energy}.centr.${XXXXX}.root
export RECO_FILE=${outdir}/reco.trdclustering.auau.${coll_energy}.centr.${XXXXX}.root
export LITQA_FILE=${outdir}/litqa.trdclustering.auau.${coll_energy}.centr.${XXXXX}.root
export ANALYSIS_FILE=${outdir}/analysis.trdclustering.auau.${coll_energy}.centr.${XXXXX}.root
#export ANALYSIS_FILE=${outdir}/analysis.auau.pisupp${PION_MISIDENTIFICATION_LEVEL}.${coll_energy}.centr.${XXXXX}.root 
export RESULT_DIR=

#Simulation parameters
#--------------------------------------------------
# number of embedded electrons
export NOF_ELECTRONS=0
# number of embedded positrons
export NOF_POSITRONS=0
# If "yes" than UrQMD will be used as background
export URQMD=yes
# If "yes" PLUTO particles will be embedded
export PLUTO=yes
#Collision energy: 25gev or 8gev -> set proper weight into analysis
export ENERGY=${coll_energy}

#Geometry setup macro
export GEO_SETUP_FILE=${setupMacro}

#If "yes" DELTA electrons will be embedded
export DELTA=no
export DELTA_FILE=/lustre/cbm/user/ebelolap/aug11/sep12/${ENERGY}/${FIELDDIR}/deltasource/mc.delta.root

export PLUTO_PARTICLE=${pluto_particle}
export PLUTO=yes

if [ ${pluto_particle} = "rho0" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/rho0/epem/pluto.auau.${ENERGY}.rho0.epem.${XXXX}.root
  #  export PLUTO_FILE=/hera/cbm/users/slebedev/mc/pluto/auau/${ENERGY}/rho0/epem/pluto.auau.${ENERGY}.rho0.epem.${XXXX}.root
elif [ ${pluto_particle} = "omegaepem" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/omega/epem/pluto.auau.${ENERGY}.omega.epem.${XXXX}.root
 #   export PLUTO_FILE=/hera/cbm/users/slebedev/mc/pluto/auau/${ENERGY}/omega/epem/pluto.auau.${ENERGY}.omega.epem.${XXXX}.root
elif [ ${pluto_particle} = "omegadalitz" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/omega/pi0epem/pluto.auau.${ENERGY}.omega.pi0epem.${XXXX}.root
 #   export PLUTO_FILE=/hera/cbm/users/slebedev/mc/pluto/auau/${ENERGY}/omega/pi0epem/pluto.auau.${ENERGY}.omega.pi0epem.${XXXX}.root
elif [ ${pluto_particle} = "phi" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/phi/epem/pluto.auau.${ENERGY}.phi.epem.${XXXX}.root
 #   export PLUTO_FILE=/hera/cbm/users/slebedev/mc/pluto/auau/${ENERGY}/phi/epem/pluto.auau.${ENERGY}.phi.epem.${XXXX}.root
elif [ ${pluto_particle} = "pi0" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/pi0/gepem/pluto.auau.${ENERGY}.pi0.gepem.${XXXX}.root
 #   export PLUTO_FILE=/hera/hades/user/ekrebs/cbm/pluto/auau/${ENERGY}/pi0/gepem/pluto.auau.${ENERGY}.pi0.gepem.${XXXX}.root
elif [ ${pluto_particle} = "urqmd" ] ; then 
   export PLUTO=no
fi 

# create special and enter special workdir for job
username=$(whoami)
workdir=/tmp/$username/$JOB_ID.$SGE_TASK_ID
mkdir -p $workdir
cd $workdir

# run the root simulation
#root -b -l -q "${macro_dir}/run_sim.C(${nevents})"
root -b -l -q "${macro_dir}/run_reco.C(${nevents})"
root -b -l -q "${macro_dir}/run_litqa.C(${nevents})"
root -b -l -q "${macro_dir}/run_analysis.C(${nevents})"

cp -v ${SGE_STDOUT_PATH} ${outdir}/log/${JOB_ID}.${SGE_TASK_ID}.log

export SCRIPT=no
