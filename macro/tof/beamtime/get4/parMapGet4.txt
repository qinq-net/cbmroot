##############################################################################
# Class:   TMbsMappingTofPar
# Context: TestDefaultContext
##############################################################################
[TMbsMappingTofPar]
//----------------------------------------------------------------------------
// Switch ON/OFF debug tests, output & histos in mapping
MappingDebug: Int_t            0
//----------------------------------------------------------------------------
// => If mapping TDC channel for each detector channel
// Nb of detectors
//NbDetectors: Int_t           4
// Nb of channels per detector
// Number of entries HAS TO match the number of detectors
// 0   1   2   3   4   5   6   7   8   9  10  11
//NbChanDet: Int_t \
//  32  72   1   1
// Detectors Unique ID (aka 1st channel 1st side ID)
// 0xFF000000 = Channel ID   = 0 for 1st channel 1st side
// 0x00800000 = Channel Side = 0 for 1st channel 1st side
// 0x007F0000 = RPC ID       = or detector ID
// 0x0000F000 = SM Type      = e.g. 0 for HD, 1 for Buc, 2 for plastics, 3 for Pad CRPC, ...
// 0x00000FF0 = SM ID        = e.g. 0 for HD, 1 for Buc, 2 for plastics, 3 for Pad CRPC, ...
// 0x0000000F = System ID    = always 6 for TOF
//       0          1          2          3          4          5          6          7
//DetUniqueId: Int_t \
//0x00000006 0x00001016 0x00002026 0x00012026 
//----------------------------------------------------------------------------
// => If mapping detector channel for each TDC channel
// Nb of TDC mapped (1)
NbMappedTdc: Int_t          14
// Nb of channels per TDC (2)
// Number of entries HAS TO match the number of TDCs in (1)
// 0   1   2   3   4   5   6   7   8   9  10  11
NbChanTdc: Int_t \
  28  28  28  28  28  28   4   4   4   4   4   4   4   4
// TDC Unique ID (aka 1st channel rising edge ID)
// Number of entries HAS TO match the number of TDCs in (1)
// 0x10000000 = edge         = edge, 0 = Rising, 1 = Falling
// 0x0FFF0000 = Channel ID   = TDC Channel index, always 0 here as first channel index!
// 0x0000FFF0 = TDC ID       = TDC index, 0-4096
// 0x0000000F = TDC type     = cf TofTdcDef.h, 1 = Caen, 2 = VFTX, 3 = TRB3, 4 = GET4
//       0          1          2          3          4          5          6          7          8          9         10         11
TdcUniqueId: Int_t \
0x00000002 0x00000012 0x00000022 0x00000032 0x00000042 0x00000052 0x00000004 0x00000014 0x00000024 0x00000034 0x00000044 0x00000054 0x00000064 0x00000074
// TDC to Detector Mapping: for each tdc channel provides the Detector Unique ID to use
// Formatting: 1 line per TDC, total nb of entries has to match the sum of (2)
// Use 0xFFFFFFFF for unassigned channels
// Detectors Unique ID
// 0xFF000000 = Channel ID   = 0 for 1st channel 1st side
// 0x00800000 = Channel Side = 0 for 1st channel 1st side
// 0x007F0000 = RPC ID       = or detector ID
// 0x0000F000 = SM Type      = e.g. 0 for HD, 1 for Buc, 2 for plastics, 3 for Pad CRPC, 4 for reference signal 1 & 2, 5 for HD Big RPC, 6 for Buc multiple...
// 0x00000FF0 = SM ID        = e.g. 0 for HD, 1 for Buc, 2 for plastics, 3 for Pad CRPC, 4 for reference signal 1 & 2, 5 for HD Big RPC, 6 for Buc multiple ...
// 0x0000000F = System ID    = always 6 for TOF
// e.g: 1st Ch left Buc RPC = 0x00001016, 1st ch left HD RPC = 0x00000006, 1st plastic left = 0x00002026, 2nd plastic left = 0x00012026, Reference = 0x00004046
// cosmics: 1st ch left Big HD RPC = 0x00005006, 1st Ch left Big Hd RPC GET4 = 0x00015016,
//                1st plastic left = 0x00002026,            2nd plastic left = 0x00012026, 
//           1st plastic left Get4 = 0x00022026,       2nd plastic left GET4 = 0x00032026, 
//                       Reference = 0x00004046
//       0          1          2          3          4          5          6          7          8          9         10         11         12         13         14         15         16         17         18         19         20         21         22         23         24         25         26         27
Mapping: Int_t \
0x00005006 0x01005006 0x02005006 0x03005006 0x04005006 0x05005006 0x06005006 0x07005006 0x08005006 0x09005006 0x0A005006 0x0B005006 0x0C005006 0x0D005006 0x0E005006 0x0F005006 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0x00004046 0xFFFFFFFF 0xFFFFFFFF \
0x10005006 0x11005006 0x12005006 0x13005006 0x14005006 0x15005006 0x16005006 0x17005006 0x18005006 0x19005006 0x1A005006 0x1B005006 0x1C005006 0x1D005006 0x1E005006 0x1F005006 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF \
0x20005006 0x21005006 0x22005006 0x23005006 0x24005006 0x25005006 0x26005006 0x27005006 0x28005006 0x29005006 0x2A005006 0x2B005006 0x2C005006 0x2D005006 0x2E005006 0x2F005006 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF \
0x0F805006 0x0E805006 0x0D805006 0x0C805006 0x0B805006 0x0A805006 0x09805006 0x08805006 0x07805006 0x06805006 0x05805006 0x04805006 0x03805006 0x02805006 0x01805006 0x00805006 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF \
0x1F805006 0x1E805006 0x1D805006 0x1C805006 0x1B805006 0x1A805006 0x19805006 0x18805006 0x17805006 0x16805006 0x15805006 0x14805006 0x13805006 0x12805006 0x11805006 0x10805006 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF \
0x2F805006 0x2E805006 0x2D805006 0x2C805006 0x2B805006 0x2A805006 0x29805006 0x28805006 0x27805006 0x26805006 0x25805006 0x24805006 0x23805006 0x22805006 0x21805006 0x20805006 0x00002026 0x00802026 0x00012026 0x00812026 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF \
0x14815016 0x15815016 0x16815016 0x17815016 \
0x18815016 0x19815016 0x1A815016 0x1B815016 \
0x1B015016 0x1A015016 0x19015016 0x18015016 \
0x17015016 0x16015016 0x15015016 0x14015016 \
0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF \
0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF \
0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF \
0x00832026 0x00032026 0x00822026 0x00022026
// Use extended Digis: Time and Tot stored as double
// while "normal" digis rebin both to make them fit together in a single 32b integer
UseExtDigi: Int_t            1
// Nb of Detectors mapped (3)
NbMappedDet: Int_t           7
// Detectors Unique ID (aka 1st channel left side ID)
// Number of entries HAS TO match the number of Detectors in (3)
DetUniqueId: Int_t \
0x00005006 0x00015016 0x00002026 0x00012026 0x00022026 0x00032026 0x00004046
########################### 
