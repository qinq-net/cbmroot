##############################################################################
# Class:   TMbsMappingTofPar
# Context: TestDefaultContext
##############################################################################
[TMbsMappingTofPar]
//----------------------------------------------------------------------------
// Switch ON/OFF debug tests, output & histos in mapping
MappingDebug: Int_t       1
//----------------------------------------------------------------------------
// => If mapping detector channel for each TDC channel
// Nb of TDC mapped (1)
NbMappedTdc: Int_t      15
// Nb of channels per TDC (2)
// Number of entries HAS TO match the number of TDCs in (1)
// 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37
NbChanTdc: Int_t \
  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32
// TDC Unique ID (aka 1st channel rising edge ID)
// Number of entries HAS TO match the number of TDCs in (1)
// 0x10000000 = edge         = edge, 0 = Rising, 1 = Falling
// 0x0FFF0000 = Channel ID   = TDC Channel index, always 0 here as first channel index!
// 0x0000FFF0 = TDC ID       = TDC index, 0-4096
// 0x0000000F = TDC type     = cf TofTdcDef.h, 1 = Caen, 2 = VFTX, 3 = TRB3, 4 = GET4
//       0          1          2          3          4          5          6          7          8          9         10         11
// List of all addresses in order: 4*4 TRB3, 19 FEE-TDC1, 3 spare FEE-TDC1, 4 reserved FEE-TDC1 addresses
TdcUniqueId: Int_t \
0x00000003 0x00000013 0x00000023 0x00000033 0x00000043 0x00000053 0x00000063 0x00000073 \
0x00000083 0x00000093 0x000000A3 0x000000B3 0x000000C3 0x000000D3 0x000000E3
//0x00003183 0x00003193 0x00004203 0x00009013 0x00009023 0x00009033 0x00009043 0x00009053 \
//0x00009063 0x00009073 0x00009083 0x00009093 0x00009103 0x00009113 0x00009123
// TDC to Detector Mapping: for each tdc channel provides the Detector Unique ID to use
// Formatting: 1 line per TDC, total nb of entries has to match the sum of (2)
// Use 0xFFFFFFFF for unassigned channels
// Detectors Unique ID
// 0xFF000000 = Channel ID   = 0 for 1st channel 1st side
// 0x00800000 = Channel Side = 0 for 1st channel 1st side
// 0x007F0000 = RPC ID       = or detector ID
// 0x0000F000 = SM Type      = e.g. 0 for HD, 1 for Buc, 2 for plastics, 3 for Pad CRPC, 4 for reference signal 1 & 2, 5 for HD Big RPC, 6 for Buc multiple...
// 0x00000FF0 = SM ID        = e.g. 0 for HD, 1 for Buc, 2 for plastics, 3 for Pad CRPC, 4 for reference signal 1 & 2, 5 for HD Big RPC, 6 for Buc multiple ...
// 0x0000000F = System ID    = always 6 for TOF
// e.g: 1st Ch left Buc RPC = 0x00001016, 1st ch left HD RPC = 0x00000006, 1st plastic left = 0x00002026, 2nd plastic left = 0x00012026, Reference = 0x00004046
// from cbmroot/development/tofgroup/unpack/tof/mapping/TMbsMappingTofPar.cxx
//const Int_t TMbsMappingTofPar::fgkiNbChDetType[fgkiNbDetType] =
// SmType               0     1     2     3     4     5     6     7     8     9 
//                    Def   Ref   PLA    P2    P5   Dia  2015  2012   PAD  Star
//                      |     |     |     |     |     |     |     |     |     |     
// Nchannels       {    0,   72,    1,   32,   16,   16,   40,   40,    8,   32 };
// Ncounters            0     1     2     1     1     2     2     8    3/6   3x2     
//       0          1          2          3          4          5          6          7          8          9         10         11         12         13         14         15         16         17         18         19         20         21         22         23         24         25         26         27         28         29         30         31
Mapping: Int_t \
0x1F803006 0x1E803006 0x1D803006 0x1C803006 0x1B803006 0x1A803006 0x19803006 0x18803006 0x17803006 0x16803006 0x15803006 0x14803006 0x13803006 0x12803006 0x11803006 0x10803006 0x0F803006 0x0E803006 0x0D803006 0x0C803006 0x0B803006 0x0A803006 0x09803006 0x08803006 0x07803006 0x06803006 0x05803006 0x04803006 0x03803006 0x02803006 0x01803006 0x00803006 \
0x00003006 0x01003006 0x02003006 0x03003006 0x04003006 0x05003006 0x06003006 0x07003006 0x08003006 0x09003006 0x0A003006 0x0B003006 0x0C003006 0x0D003006 0x0E003006 0x0F003006 0x10003006 0x11003006 0x12003006 0x13003006 0x14003006 0x15003006 0x16003006 0x17003006 0x18003006 0x19003006 0x1A003006 0x1B003006 0x1C003006 0x1D003006 0x1E003006 0x1F003006 \
0x0F804006 0x0E804006 0x0D804006 0x0C804006 0x0B804006 0x0A804006 0x09804006 0x08804006 0x07804006 0x06804006 0x05804006 0x04804006 0x03804006 0x02804006 0x01804006 0x00804006 0x00004006 0x01004006 0x02004006 0x03004006 0x04004006 0x05004006 0x06004006 0x07004006 0x08004006 0x09004006 0x0A004006 0x0B004006 0x0C004006 0x0D004006 0x0E004006 0x0F004006 \
0x1F819006 0x1E819006 0x1D819006 0x1C819006 0x1B819006 0x1A819006 0x19819006 0x18819006 0x17819006 0x16819006 0x15819006 0x14819006 0x13819006 0x12819006 0x11819006 0x10819006 0x0F819006 0x0E819006 0x0D819006 0x0C819006 0x0B819006 0x0A819006 0x09819006 0x08819006 0x07819006 0x06819006 0x05819006 0x04819006 0x03819006 0x02819006 0x01819006 0x00819006 \
0x1F809006 0x1E809006 0x1D809006 0x1C809006 0x1B809006 0x1A809006 0x19809006 0x18809006 0x17809006 0x16809006 0x15809006 0x14809006 0x13809006 0x12809006 0x11809006 0x10809006 0x0F809006 0x0E809006 0x0D809006 0x0C809006 0x0B809006 0x0A809006 0x09809006 0x08809006 0x07809006 0x06809006 0x05809006 0x04809006 0x03809006 0x02809006 0x01809006 0x00809006 \
0x00009006 0x01009006 0x02009006 0x03009006 0x04009006 0x05009006 0x06009006 0x07009006 0x08009006 0x09009006 0x0A009006 0x0B009006 0x0C009006 0x0D009006 0x0E009006 0x0F009006 0x10009006 0x11009006 0x12009006 0x13009006 0x14009006 0x15009006 0x16009006 0x17009006 0x18009006 0x19009006 0x1A009006 0x1B009006 0x1C009006 0x1D009006 0x1E009006 0x1F009006 \
0x00019006 0x01019006 0x02019006 0x03019006 0x04019006 0x05019006 0x06019006 0x07019006 0x08019006 0x09019006 0x0A019006 0x0B019006 0x0C019006 0x0D019006 0x0E019006 0x0F019006 0x10019006 0x11019006 0x12019006 0x13019006 0x14019006 0x15019006 0x16019006 0x17019006 0x18019006 0x19019006 0x1A019006 0x1B019006 0x1C019006 0x1D019006 0x1E019006 0x1F019006 \
0x1F819016 0x1E819016 0x1D819016 0x1C819016 0x1B819016 0x1A819016 0x19819016 0x18819016 0x17819016 0x16819016 0x15819016 0x14819016 0x13819016 0x12819016 0x11819016 0x10819016 0x0F819016 0x0E819016 0x0D819016 0x0C819016 0x0B819016 0x0A819016 0x09819016 0x08819016 0x07819016 0x06819016 0x05819016 0x04819016 0x03819016 0x02819016 0x01819016 0x00819016 \
0x1F809016 0x1E809016 0x1D809016 0x1C809016 0x1B809016 0x1A809016 0x19809016 0x18809016 0x17809016 0x16809016 0x15809016 0x14809016 0x13809016 0x12809016 0x11809016 0x10809016 0x0F809016 0x0E809016 0x0D809016 0x0C809016 0x0B809016 0x0A809016 0x09809016 0x08809016 0x07809016 0x06809016 0x05809016 0x04809016 0x03809016 0x02809016 0x01809016 0x00809016 \
0x00009016 0x01009016 0x02009016 0x03009016 0x04009016 0x05009016 0x06009016 0x07009016 0x08009016 0x09009016 0x0A009016 0x0B009016 0x0C009016 0x0D009016 0x0E009016 0x0F009016 0x10009016 0x11009016 0x12009016 0x13009016 0x14009016 0x15009016 0x16009016 0x17009016 0x18009016 0x19009016 0x1A009016 0x1B009016 0x1C009016 0x1D009016 0x1E009016 0x1F009016 \
0x00019016 0x01019016 0x02019016 0x03019016 0x04019016 0x05019016 0x06019016 0x07019016 0x08019016 0x09019016 0x0A019016 0x0B019016 0x0C019016 0x0D019016 0x0E019016 0x0F019016 0x10019016 0x11019016 0x12019016 0x13019016 0x14019016 0x15019016 0x16019016 0x17019016 0x18019016 0x19019016 0x1A019016 0x1B019016 0x1C019016 0x1D019016 0x1E019016 0x1F019016 \
0x1F819026 0x1E819026 0x1D819026 0x1C819026 0x1B819026 0x1A819026 0x19819026 0x18819026 0x17819026 0x16819026 0x15819026 0x14819026 0x13819026 0x12819026 0x11819026 0x10819026 0x0F819026 0x0E819026 0x0D819026 0x0C819026 0x0B819026 0x0A819026 0x09819026 0x08819026 0x07819026 0x06819026 0x05819026 0x04819026 0x03819026 0x02819026 0x01819026 0x00819026 \
0x1F809026 0x1E809026 0x1D809026 0x1C809026 0x1B809026 0x1A809016 0x19809026 0x18809026 0x17809026 0x16809026 0x15809026 0x14809016 0x13809026 0x12809026 0x11809026 0x10809026 0x0F809026 0x0E809016 0x0D809026 0x0C809026 0x0B809026 0x0A809026 0x09809026 0x08809016 0x07809026 0x06809026 0x05809026 0x04809026 0x03809026 0x02809016 0x01809026 0x00809026 \
0x00009026 0x01009026 0x02009026 0x03009026 0x04009026 0x05009026 0x06009026 0x07009026 0x08009026 0x09009026 0x0A009026 0x0B009026 0x0C009026 0x0D009026 0x0E009026 0x0F009026 0x10009026 0x11009026 0x12009026 0x13009026 0x14009026 0x15009026 0x16009026 0x17009026 0x18009026 0x19009026 0x1A009026 0x1B009026 0x1C009026 0x1D009026 0x1E009026 0x1F009026 \
0x00019026 0x01019026 0x02019026 0x03019026 0x04019026 0x05019026 0x06019026 0x07019026 0x08019026 0x09019026 0x0A019026 0x0B019026 0x0C019026 0x0D019026 0x0E019026 0x0F019026 0x10019026 0x11019026 0x12019026 0x13019026 0x14019026 0x15019026 0x16019026 0x17019026 0x18019026 0x19019026 0x1A019026 0x1B019026 0x1C019026 0x1D019026 0x1E019026 0x1F019026
// Use extended Digis: Time and Tot stored as double
// while "normal" digis rebin both to make them fit together in a single 32b integer
UseExtDigi: Int_t          1
// Nb of Detectors mapped (3)
NbMappedDet: Int_t       8
// Detectors Unique ID (aka 1st channel left side ID)ID
// Number of entries HAS TO match the number of Detectors in (3)
DetUniqueId: Int_t \
0x00003006 0x00004006 0x00009006 0x00019006 0x00009016 0x00019016 0x00009026 0x00019026 
#################################################################################################################################### 
